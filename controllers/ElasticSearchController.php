<?php

namespace common\modules\elasticSearch\controllers;
use Yii;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\modules\product\models\Product;
use common\modules\core\models\Setting;

/**
 * Default controller for the `elasticSearch` module
 */
class ElasticSearchController extends Controller
{
    /**
     * Renders the index view for the module
     * @return string
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'allow' => true,
                        'actions' => ['admin-index', 'index', 'search-results','products-by-category'],
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                ],
            ],
        ];
    }

    public function beforeAction($action)
    {            
        if ($action->id == 'index' || $action->id == "admin-index") {
            $this->enableCsrfValidation = false;
        }
        return parent::beforeAction($action);
    }

    public function actionIndex()
    {
        $request = Yii::$app->request;
        if($request->post("id") != "") {
            return $this->redirect(['/product/product/view', 'id' => $request->post("id")]);
        }else{
            return $this->redirect(['search-results', 'term' => $request->post("req"), "scope"=>"client"]);
        }
    }

    public function actionAdminIndex() 
    {
        $request = Yii::$app->request;
        if($request->post("id") != "") {
            if($request->post("type") == "1"){ // product = 1 , category = 2
                return $this->redirect(['/product/admin-product/view', 'id' => $request->post("id")]);
            }else{
                return $this->redirect(['products-by-category',"id" => $request->post("id")]);
            }
        }else{
            return $this->redirect(['search-results', 'term' => $request->post("req")]);
        }
    }

    public function actionSearchResults($term = NULL,$scope = "admin")
    {
        /* searching for categories */
        $settings = Setting::find()->one();
        $host = $settings->elasticSearchHost;
        $prefix = $settings->elasticSearchPrefix;
        $index="product";

        $headers = array();
        $headers[] = "Content-Type: application/json";
        
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        /* uery for multiple fields */

        // curl_setopt($ch, CURLOPT_URL, "172.17.0.4:9200/qomondi_product/_search");
        // curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        // curl_setopt($ch, CURLOPT_POSTFIELDS, "\n".
        //     "{\n".
        //                 "\"from\" : 0, \"size\" : 50,\n".
        //                 "\"query\": {\n".
        //                         "\"match\" : {\n".
        //                                 "\"name\" : \"".$term."\",\n".
        //                                         "\"fuzziness\": \"1\"\n".
        //                                 "}\n".
        //                         "},\n".
        //                 "\"_source\": [\"name\",\"id\",\"reference\",\"quantity\",\"stock_status\",\"availability_date\"]\n".
        //     "}\n");
        $ch = curl_init();

        /* searching for products */
        curl_setopt($ch, CURLOPT_URL, $host."/".$prefix."_product/_search?pretty");
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, "\n{".
                "\n\"from\" : 0, \"size\" : 50,".
                "\n\"query\": {".
                    "\n\"match\": {".
                        "\n\"name\": {".
                            "\n\"query\": \"".$term."\",".
                            "\n\"boost\": 1.0,".
                            "\n\"fuzziness\": 1,".
                            "\n\"prefix_length\": 0,".
                            "\n\"max_expansions\": 100".
                        "\n}".
                    "\n}".
                "\n".
            "}\n".
            "}\n");

        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        $products = json_decode($result)->hits->hits;

        curl_close($ch);

        if($scope == "admin") {
            $ch = curl_init();
            curl_setopt($ch, CURLOPT_URL, $host."/".$prefix."_category/_search?pretty");
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_POSTFIELDS, "\n{".
                "\n\"from\" : 0, \"size\" : 50,".
                    "\n\"query\": {".
                        "\n\"match\": {".
                            "\n\"name\": {".
                                "\n\"query\": \"".$term."\",".
                                "\n\"boost\": 1.0,".
                                "\n\"fuzziness\": 1,".
                                "\n\"prefix_length\": 0,".
                                "\n\"max_expansions\": 100".
                            "\n}".
                        "\n}".
                    "\n".
                "}\n".
                "}\n");

            curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");
            curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

            $result = curl_exec($ch);
            $categories = json_decode($result)->hits->hits;

            curl_close($ch);
            return $this->render("search-results",["products"=>$products,"categories"=>$categories,"scope"=>"admin"]);
        }else{
            return $this->render("search-results",["products"=>$products,"scope"=>"client"]);
        }
    }

    public function actionProductsByCategory($id) {
        $products = Product::find()->where(["category_id"=>$id])->all();
        $count = count($products);
        return $this->render("products-by-category",["products"=>$products]);
    }    
}


